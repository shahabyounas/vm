name: Simple CI/CD Pipeline

on:
  push:
    branches: [main, develop]

permissions:
  contents: write
  pages: write
  id-token: write

env:
  NODE_VERSION: "20"
  PRODUCTION_DOMAIN: "vapemasters.shop"
  STAGING_DOMAIN: "staging.vapemasters.shop"


jobs:
  # Build and Deploy to Staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Verify environment variables
        run: |
          echo "Checking Firebase environment variables:"
          echo "VITE_FIREBASE_API_KEY exists: ${{ secrets.VITE_FIREBASE_API_KEY != '' }}"
          echo "VITE_FIREBASE_AUTH_DOMAIN exists: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN != '' }}"
          echo "VITE_FIREBASE_PROJECT_ID exists: ${{ secrets.VITE_FIREBASE_PROJECT_ID != '' }}"

      - name: Build application
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        run: |
          echo "Building with Firebase config:"
          echo "API Key: ${VITE_FIREBASE_API_KEY:0:10}..."
          echo "Auth Domain: $VITE_FIREBASE_AUTH_DOMAIN"
          echo "Project ID: $VITE_FIREBASE_PROJECT_ID"
          npm run build
          echo "Checking built files for Firebase config:"
          grep -r "VITE_FIREBASE_API_KEY" dist/ || echo "API key not found in built files"

      - name: Create staging CNAME
        run: echo "${{ env.STAGING_DOMAIN }}" > dist/CNAME

      - name: Deploy to GitHub Pages (Staging)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages-staging
          cname: ${{ env.STAGING_DOMAIN }}
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

  # Build and Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        run: npm run build

      - name: Create production CNAME
        run: echo "${{ env.PRODUCTION_DOMAIN }}" > dist/CNAME

      - name: Deploy to GitHub Pages (Production)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          cname: ${{ env.PRODUCTION_DOMAIN }}
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
